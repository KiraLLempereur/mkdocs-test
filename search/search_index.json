{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Kira's Technical Writing &amp; Marketing Portfolio","text":"<p>Warning: Under Construction</p> <p>This portfolio is currently under construction.</p>"},{"location":"#about-me","title":"About Me","text":"<p>I\u2019ve done 8+ years of technical writing and technical marketing for primarily SaaS and cloud-based products in tech and cybersecurity. I am looking for Technical Marketing Manager or Lead Technical Writer roles, primarily in tech.</p>"},{"location":"#basic-resume-deets","title":"Basic Resume Deets","text":""},{"location":"#linkedin-github-links-in-footer","title":"LinkedIn, GitHub Links (in footer?)","text":""},{"location":"admonitions/","title":"Admonitions","text":"<p>Title of the callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Collapsible info callout <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Abstract callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Tip callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Success callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Question callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Warning callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <p>Failure callout</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p>"},{"location":"api-docs/","title":"Placeholder for now","text":""},{"location":"code-examples/","title":"Code Examples","text":"<p>An example of a codeblock for Python:</p> add_numbers.py<pre><code># Function to add two numbers\ndef add_two_numbers(num1, num2):\n    return num1 + num2\n\n# Example usage\nresult = add_two_numbers(5, 3)\nprint('The sum is:', result)\n</code></pre> <p>An example of a codeblock for JavaScript, with lines 2 through 4 highlighted:</p> concatenate_strings.js<pre><code>// Function to concatenate two strings\nfunction concatenateStrings(str1, str2) {\n  return str1 + str2;\n}\n\n// Example usage\nconst result = concatenateStrings(\"Hello, \", \"World!\");\nconsole.log(\"The concatenated string is:\", result);\n</code></pre>"},{"location":"content-tabs/","title":"Content Tabs","text":""},{"location":"content-tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"content-tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"content-tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":"<p>This is some examples of code blocks in content tabs.</p> PythonJavaScript <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"dd-content/","title":"Placeholder for now","text":""},{"location":"dd-global-bot-report/","title":"Placeholder for now","text":""},{"location":"diagram-examples/","title":"Diagram Examples","text":""},{"location":"diagram-examples/#flowcharts","title":"Flowcharts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"diagram-examples/#sequence-diagrams","title":"Sequence Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"},{"location":"diagram-examples/#state-diagrams","title":"State Diagrams","text":"<pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"diagram-examples/#class-diagrams","title":"Class Diagrams","text":"<pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }</code></pre>"},{"location":"diagram-examples/#entity-relationship-diagrams","title":"Entity-Relationship Diagrams","text":"<pre><code>erDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</code></pre>"},{"location":"product-docs/","title":"Placeholder for now","text":""},{"location":"tech-marketing/","title":"Placeholder for now","text":""},{"location":"tech-writing/","title":"What is it about technical writing?","text":"<p>I\u2019ve worked with most kinds of technical writing, including user guides, help articles, troubleshooting documentation, white papers, API documentation. At Avast Business, I also developed the style guides and documentation processes, and built an internal knowledge base for support agents in Confluence.</p> <p>My goal in building or upgrading documentation is always to focus on the needs of the user, not the product.</p>"},{"location":"tech-writing/#process","title":"Process","text":"<p>My writing process follows this general outline:</p>"},{"location":"tech-writing/#building-the-roadmap","title":"Building the Roadmap","text":"<ol> <li> <p>Identify where we\u2019re starting. What do the current docs look like?</p> </li> <li> <p>Identify (the basics of) where we want to go. This involves empathizing with the user, asking myself what problems they have and how my docs can address those issues. This also involves talking with the product and engineering teams to understand the most important user flows.</p> </li> <li> <p>Build a bridge between where we are with docs and where we want to be, including the basics of what features to document, what information to include, and where we can find the details.</p> </li> <li> <p>Figure out the content architecture.</p> <pre><code>graph LR\nA[Existing doc structure?] --&gt; |Yes| B[Does it make sense?];\nB --&gt; |Yes| C[Fit new content into structure];\nB --&gt; |No| D[Design strong, scalable information architecture];\nA --&gt; |No| D;</code></pre> </li> </ol>"},{"location":"tech-writing/#building-the-information","title":"Building the Information","text":"<ol> <li> <p>Gather the information through testing functionality myself, reading Jira tickets, and looking up whatever content the engineers and product managers have written in Confluence, Notion, etc. Should have a solid outline or first draft by the end of it.</p> </li> <li> <p>Take screenshots or short videos to supplement written instructions, and annotate them well. Where needed, create walkthroughs, tutorials, or videos to demonstrate user flows.</p> </li> <li> <p>Bring specific questions to engineers/product managers to fill in the details that weren\u2019t included in Jira or other internal sources.</p> </li> <li> <p>Write and edit documentation, then build documentation and push live.</p> </li> </ol>"},{"location":"tech-writing/#profit","title":"Profit","text":"<ol> <li> <p>Perform user testing to identify usability gaps for docs and the product itself. This helps me understand the unique needs of the company\u2019s particular users.</p> </li> <li> <p>Analyze doc usage stats and support tickets (esp T1) to determine what content might be missing or needs improvement.</p> </li> </ol>"}]}